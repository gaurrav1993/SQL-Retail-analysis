
CREATE DATABASE CASESTUDY1

USE CASESTUDY1

/*===================================================================================================================*/
/*--------------------------DATA PREPARATION AND UNDERSTANDING-------------------------------------------------------*/
/*===================================================================================================================*/


--Q1.WHAT IS THE TOTAL NUMBER OF ROWS IN EACH OF THE 3 TABLE IN THE DATABASE ?
	
	SELECT COUNT(*) AS [NUMBER OF ROWS] FROM PROD_CAT_INFO ;
	SELECT COUNT(*) AS [NUMBER OFM ROWS] FROM CUSTOMER ;
	SELECT COUNT(*) AS [NUMBER OF ROWS] FROM TRANSACTIONS ;


--Q2.WHAT IS THE TOTAL NUMBER OF TRANSACTIONS THAT HAVE RETURN ?
 
 
	SELECT COUNT (CAST(TRANSACTION_ID AS BIGINT)) AS NUMBER_OF_RETURNS 
	FROM TRANSACTIONS
	WHERE QTY < 0;


--Q3.AS YOU WOULD HAVE NOTICED , THE DATES PROVIDED ACROSS THE DATASETS ARE NOT IN A CORRECT FORMAT. AS FIRST STEPS, 
--	 PLEASE CONVERT THE DATE VARIABLES INTO VALID DATE FORMAT BEFORE PROCEEDING AHEAD. 

	SELECT CONVERT (DATE ,DOB, 105) AS PROPER_DATE FROM CUSTOMER;
	
	SELECT CONVERT (DATE ,TRAN_DATE, 105) AS PROPER_DATE FROM TRANSACTIONS;


--Q4.WHAT IS THE TIME RANGE OF THE TRANSACTION DATA AVAILABLE FOR ANALYSIS ? SHOW THE OUTPUT IN NUMBER OF DAYS,
--	MONTHS AND YEARS SIMULTANEOUSLY  IN DIFFERENT COLUMNS.	

	SELECT 
	DATEDIFF (DAY , MIN(CONVERT (DATE ,TRAN_DATE, 105)), MAX(CONVERT (DATE ,TRAN_DATE, 105))) AS [RANGE IN DAYS],
	DATEDIFF (MONTH , MIN(CONVERT (DATE ,TRAN_DATE, 105)), MAX(CONVERT (DATE ,TRAN_DATE, 105))) AS [RANGE IN MONTHS],
	DATEDIFF (YEAR , MIN(CONVERT (DATE ,TRAN_DATE, 105)), MAX(CONVERT (DATE ,TRAN_DATE, 105))) AS [RANGE IN YEAR]
	FROM TRANSACTIONS


--Q5. WHICH PRODUCT CATEGORY DOES THE SUB-CATEGORY "DIY" BELONG TO ?

	SELECT PROD_CAT 
	FROM PROD_CAT_INFO
	WHERE PROD_SUBCAT = 'DIY'


/*======================================================================================================================
-----------------------------------------------DATA ANALYSIS------------------------------------------------------------
========================================================================================================================*/

--Q1.WHICH CHANNEL IS MOST FREQUENTLY USED FOR TRANSACTION ?

	SELECT  TOP 1 STORE_TYPE , 
	COUNT (CAST(TRANSACTION_ID AS BIGINT)) AS [TRANSACTION COUNT] 
	FROM TRANSACTIONS
	GROUP BY STORE_TYPE
	ORDER BY COUNT (CAST(TRANSACTION_ID AS BIGINT)) DESC;


--Q2.WHAT IS THE COUNT OF MALE AND FEMALE CUSTOMERS IN THE DATABASES ?

	SELECT GENDER ,
	COUNT (GENDER) AS [NUMBER OF CUSTOMER] 
	FROM CUSTOMER 
	WHERE GENDER IN ('M','F')
	GROUP BY GENDER;



--Q3. FROM WHICH CITY DO WE HAVE THE MAXIMUM NUMBER OF CUSTOMERS AND HOW MANY ?

	SELECT TOP 1 CITY_CODE , 
	COUNT (CUSTOMER_ID) AS NUMBER_OF_CUSTOMERS
	FROM CUSTOMER
	GROUP BY 
	CITY_CODE
	ORDER BY COUNT (CUSTOMER_ID) DESC;


--Q4. HOW MANY SUB-CATEGORY ARE THERE UNDER BOOKS CATEGORY ?
	
	SELECT 
	PROD_CAT AS CATEGORY,
	PROD_SUBCAT AS [SUB CATEGORY] 
	FROM PROD_CAT_INFO
	WHERE 
	PROD_CAT = 'BOOKS'



--Q5.WHAT IS MAXIMUM QUANTITY OF PRODUCTS EVER ORDERED ?
	
	SELECT 
	MAX ( QTY ) AS [MAXIMUM ORDERED QUANTITY]
	FROM TRANSACTIONS
	WHERE QTY > 0 ;

--Q6. WHAT IS THE NET TOTAL REVENUE GENERATED IN THE CATEGORIES ELECTRONICS AND BOOKS ?


	SELECT ROUND (SUM (CAST (TOTAL_AMT AS FLOAT)),2) AS TOTAL_REVENUE FROM TRANSACTIONS AS T
	INNER JOIN PROD_CAT_INFO AS CAT_INFO
	ON T.PROD_CAT_CODE = CAT_INFO.PROD_CAT_CODE AND T.prod_subcat_code  = CAT_INFO.prod_sub_cat_code
	WHERE PROD_CAT IN('ELECTRONICS' , 'BOOKS')
	

-- Q7. HOW MANY CUSTOMERS HAVE >10 TRANSACTIONS WITH US , EXCLUDING RETURNS ?

	WITH CTE_TRANSACTION
	AS
		(
		SELECT 
		CUST_ID, COUNT(CAST (TRANSACTION_ID AS BIGINT)) AS [NUMBER OF TRANSACTION] 
		FROM TRANSACTIONS 
		WHERE QTY>0
		GROUP BY CUST_ID
		HAVING 
		COUNT(CAST (TRANSACTION_ID AS BIGINT))>10
		)
	SELECT COUNT(*) AS [NUMBER OF CUSTOMERS] FROM CTE_TRANSACTION;


--Q8. WHAT IS THE COMBINED REVENUE EARNED FROM THE "ELECTRONICS " & "CLOTHING " CATEGORIES  FROM "FLAGSHIP STORES" ?


		SELECT ROUND (SUM(CAST(TOTAL_AMT AS FLOAT)),2) AS [TOTAL REVENUE] FROM TRANSACTIONS AS T
		LEFT JOIN PROD_CAT_INFO AS C_INFO
		ON T.PROD_CAT_CODE = C_INFO.PROD_CAT_CODE
		WHERE STORE_TYPE = 'Flagship store' AND PROD_CAT IN ('Clothing', 'Electronics')


--Q9. WHAT IS THE TOTAL REVENUE GENERATED FROM "MALE" CUSTOMER IN "ELECTRONICS" CATEGORY ?OUTPUT SHOULD DISPLAY TOTAL REVENUE BY PROD SUB-CAT.



		SELECT PROD_SUBCAT,ROUND (SUM(CAST(TOTAL_AMT AS FLOAT)),2) AS [TOTAL REVENUE] FROM TRANSACTIONS AS T
		LEFT JOIN PROD_CAT_INFO AS C_INFO
		ON T.PROD_CAT_CODE = C_INFO.PROD_CAT_CODE AND T.prod_subcat_code = C_INFO.prod_sub_cat_code
		LEFT JOIN CUSTOMER AS C
		ON C.CUSTOMER_ID = T.CUST_ID
		WHERE GENDER = 'M' AND PROD_CAT = 'ELECTRONICS'
		GROUP BY 
		PROD_SUBCAT


--Q.10 WHAT IS THE PERCENTAGE OF SALES AND RETURNS BY PRODUCT SUB-CATEGORY ; DISPLAY ONLY TOP 5 SUB-CATEGORIES IN TERM OF SALES ?
	
	SELECT TOP 5 prod_subcat AS [Product Sub-Category],
	ROUND(SUM(CAST(TOTAL_AMT AS FLOAT))/(SELECT SUM(CAST(TOTAL_AMT AS FLOAT)) FROM Transactions)* 100,2) AS [Sales Percentage],
	ROUND(cast (count (CASE WHEN QTY <0 THEN QTY ELSE NULL END) as float)  / cast (count(qty) as float ) * 100 ,2 ) AS [Return Percentage]
	FROM Transactions AS T
	INNER JOIN PROD_CAT_INFO AS INFO 
	ON T.prod_subcat_code = INFO.prod_sub_cat_code AND T.prod_cat_code =INFO.prod_cat_code 
	GROUP BY prod_subcat
	ORDER BY SUM(CAST(TOTAL_AMT AS FLOAT)) DESC
	
--Q.11 FOR ALL CUSTOMERS AGED BETWEEN 25 TO 35 YEARS FIND WHAT IS THE NET TOTAL REVENUE GENERATED BY THESE CONSUMERS IN LAST 30 DAYS OF TRANSACTIONS 
--	   FROM MAX TRANSACTION DATE AVAILABLE IN THE DATA?

	SELECT cust_id, SUM(cast(total_amt as float)) as [Total revenue]
	FROM Transactions AS T
	LEFT JOIN Customer AS C
	ON T.cust_id = C.customer_Id
	where cust_id IN 
		(
		SELECT customer_Id 
		FROM Customer
		WHERE DATEDIFF(YEAR , CONVERT(DATE , DOB ,103),GETDATE()) BETWEEN 25 AND 35 )
		AND
		(CONVERT(DATE , tran_date ,103) BETWEEN DATEADD(DAY , -30 ,(SELECT MAX(CONVERT(DATE , tran_date ,103)) FROM Transactions))
		AND (SELECT MAX(CONVERT(DATE , tran_date ,103)) FROM Transactions)
		)
	GROUP BY
	cust_id
	ORDER BY [Total revenue] DESC

	
--Q.12 WHICH PRODUCT CATEGORY HAS SEEN THE MAX VALUE OF RETURNS IN THE LAST 3 MONTHS OF TRANSACTIONS ?


	SELECT prod_cat,SUM(CAST (total_amt AS FLOAT)) AS TOTAL FROM Transactions AS TBL_1
	LEFT JOIN prod_cat_info AS TBL_INFO
	ON TBL_1.prod_cat_code=TBL_INFO.prod_cat_code AND TBL_1.prod_subcat_code = TBL_INFO.prod_sub_cat_code
	WHERE CAST(total_amt AS FLOAT) < 0 AND  CONVERT ( DATE,tran_date , 103)
	BETWEEN DATEADD(MONTH , -3,(SELECT MAX(CONVERT(DATE , tran_date ,103)) FROM Transactions)) 
	AND (SELECT MAX(CONVERT(DATE , tran_date ,103)) FROM Transactions)
	GROUP BY 
	prod_cat
	ORDER BY 
	TOTAL




--Q13.WHICH STORE TYPE SELLS THE MAXIMUM PRODUCTS; BY VALUE OF SALES AMOUNT AND BY QUANTITY SOLD ?
	
	SELECT Store_type,SUM(CAST(total_amt as float)) AS [TOTAL SALES],
	SUM(CAST(Qty AS INT)) AS [SUM OF QUANTITES]
	FROM Transactions
	GROUP BY 
	Store_type
	HAVING 
	SUM(CAST(total_amt as float))>= ALL (SELECT SUM(CAST (total_amt as float)) FROM transactions GROUP BY Store_type)
	AND
	SUM(CAST(Qty AS INT)) >= ALL (SELECT SUM(CAST(Qty AS INT)) FROM Transactions GROUP BY Store_type)


--Q14. WHAT ARE THE CATEGORIES FOR WHICH AVERAGE REVENUE IS ABOVE THE OVERALL REVENUE ?

	SELECT prod_cat AS Category ,
	ROUND (AVG(CAST(total_amt AS FLOAT)), 2) AS [Average Revenue] FROM Transactions AS T 
	LEFT JOIN prod_cat_info AS INFO
	ON T.prod_cat_code = INFO.prod_cat_code
	GROUP BY
	prod_cat
	HAVING 
	AVG(CAST(total_amt AS FLOAT)) > (SELECT AVG(CAST(total_amt AS FLOAT)) FROM Transactions )
	

 --Q15.FIND THE AVERAGE AND TOTAL REVENUE BY EACH SUBCATEGORY FOR THE CATEGORIES WHICH ARE AMONG TOP 5 CATEGORIES IN TERMS OF QUANTITY SOLD.


	SELECT prod_cat AS [Category],prod_subcat AS [Sub Category],
	AVG(cast (total_amt as float)) AS [Average Revenue],
	SUM(CAST(total_amt as float)) AS [Total Revenue]
	FROM Transactions AS T
	LEFT JOIN prod_cat_info  AS INFO ON
	T.prod_cat_code = INFO.prod_cat_code AND T.prod_subcat_code = INFO.prod_sub_cat_code
	WHERE prod_cat 
	IN
		(
		SELECT TOP 5 prod_cat FROM Transactions AS T
		LEFT JOIN prod_cat_info AS INFO
		ON T.prod_cat_code = INFO.prod_cat_code AND T.prod_subcat_code = INFO.prod_sub_cat_code
		GROUP BY prod_cat
		order by SUM(CAST(Qty AS INT)) DESC
		)
	GROUP BY
	prod_cat,prod_subcat
	ORDER BY Category

